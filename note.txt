修改底下html，不改變原始code，只將輸出output用圖形呈現，只需要輸出不同UE-ID的UL-BLER，
不同UE-ID用不同曲線表示

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Parse du_stats_XXX.txt for each UE Time DL/UL Tput, BLER and MCS</title>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            line-height: 1.2;
            font-size: 14px;
        }

        #output {
            white-space: pre;
            font-size: 13px;
        }

        /* 將連結文字設為藍色 */
        a {
            color: blue;
        }

        /* 將UE-ID文字設為綠色 */
        #output span.ue-id {
            color: green;
        }

        #output span.dl-tpt {
            color: blue;
        }

        #output span.dl-bler {
            color: blue;
        }

        #output span.ul-tpt {
            color: red;
        }

        #output span.ul-bler {
            color: red;
        }

        /* Added style for buttons */
        button {
            font-size: 13px;
            /* Adjust the font size as needed */
        }
    </style>
    <script>
        function parseContent() {
            // 獲取輸入的文本區域內容
            var inputText = document.getElementById('inputTextArea').value;
            console.log("Input Text:", inputText);

            // 將文本按行分割
            var lines = inputText.split('\n');
            console.log("Number of Lines:", lines.length);

            // 存儲解析結果的字符串
            var output = "";

            // 遍歷每一行
            for (var i = 0; i < lines.length; i++) {
                var line = lines[i].trim();
                console.log("Processing Line " + (i + 1) + ":", line);

                // 檢查是否包含 "GNB DU Statistics"
                if (line.startsWith("GNB DU Statistics  ")) {
                    // Print the entire line and move to the next
                    output += line + "\n";
                    continue;
                }
                // 檢查是否包含 "UE-ID BEAM-ID"
                if (line.includes("UE-ID     BEAM-ID")) {
                    // Check if the next line has numbers
                    if (i + 1 < lines.length && /^\d/.test(lines[i + 1].trim())) {
                        i++; // Skip the next line
                        output += parseUEData(lines, i);
                    }
                }

                // 檢查是否包含 "UE-ID CELL-ID ON-SUL"
                if (line.includes("UE-ID   CELL-ID   ON-SUL")) {
                    // Check if the next line has numbers
                    if (i + 1 < lines.length && /^\d/.test(lines[i + 1].trim())) {
                        i++; // Skip the next line
                        output += parseCellData(lines, i) + "\n";
                    }
                }
            }

            // 將結果添加到HTML中
            document.getElementById('output').innerHTML = output;
        }

        function parseUEData(lines, index) {
            var output = "";
            console.log("Parsing UE Data at Line " + (index + 1) + ": ", lines[index]);

            var values = lines[index].trim().split(/\s+/);
            var ueId = values[0].padEnd(8);
            var dlTpt = values[5].padEnd(8);
            var ulTpt = values[7].padEnd(8);

            // 繼續解析下一行數字
            while (index < lines.length) {
                // 如果是空白行，則繼續讀取下一列
                if (lines[index].trim() === "") {
                    index++;
                    continue;
                }

                // 如果遇到分隔線，則停止解析
                if (lines[index].includes(
                        "--------------------------------------------------------------------------------------------"
                        )) {
                    break;
                }

                // 如果是數字開頭的行，進行解析
                if (/^\d/.test(lines[index].trim())) {
                    values = lines[index].trim().split(/\s+/);
                    ueId = values[0].padEnd(8);
                    dlTpt = values[5].padEnd(8);
                    ulTpt = values[7].padEnd(8);
                    output += "<span class='ue-id'>UE-ID=" + ueId + "</span><span class='dl-tpt'>DL-TPT=" + dlTpt +
                        "</span>  <span class='ul-tpt'>UL-TPT=" + ulTpt + "</span>\n";
                }

                // 繼續處理下一行
                index++;
            }


            return output;
        }

        function parseCellData(lines, index) {
            var output = "";
            console.log("Parsing Cell Data at Line " + (index + 1) + ": ", lines[index]);
            var values = lines[index].trim().split(/\s+/);
            var ueId = values[0].padEnd(8);
            var ACK_TB0 = values[5].padEnd(8);
            var NACK_TB0 = values[6].padEnd(8);
            // calculate dl bler
            try {
                var dl_bler = parseFloat(NACK_TB0) / (parseFloat(ACK_TB0) + parseFloat(NACK_TB0));
                dl_bler = isNaN(dl_bler) ? "NaN" : dl_bler.toFixed(4);
                dl_bler = dl_bler.toString().padEnd(8);
            } catch (error) {
                var dl_bler = "NaN".padEnd(8);
            }
            var dlMcs = values[13].padEnd(8);
            var ulCrcSucc = values[18].padEnd(8);
            var ulCrcFail = values[19].padEnd(8);
            // calculate ul bler
            try {
                var ul_bler = parseFloat(ulCrcFail) / (parseFloat(ulCrcSucc) + parseFloat(ulCrcFail));
                ul_bler = isNaN(ul_bler) ? "NaN" : ul_bler.toFixed(4);
                ul_bler = ul_bler.toString().padEnd(8);
            } catch (error) {
                var ul_bler = "NaN".padEnd(8);
            }
            var ulMcs = values[22].padEnd(8);

            // 返回結果字符串
            output += "<span class='ue-id'>UE-ID=" + ueId + "</span>ACK-TB[0]=" + ACK_TB0 + "NACK-TB[0]=" + NACK_TB0 +
                "<span class='dl-bler'>DL-BLER=" + dl_bler + "</span>DL-MCS=" +
                dlMcs +
                "UL-CRC-SUCC=" + ulCrcSucc + "UL-CRC-FAIL=" + ulCrcFail + "<span class='ul-bler'>UL-BLER=" + ul_bler +
                "</span>UL-MCS=" + ulMcs +
                "\n";

            // 繼續解析下一行數字
            index++;
            while (index < lines.length && /^\d/.test(lines[index].trim())) {
                values = lines[index].trim().split(/\s+/);
                ueId = values[0].padEnd(8);
                ACK_TB0 = values[5].padEnd(8);
                NACK_TB0 = values[6].padEnd(8);
                // calculate dl bler
                try {
                    var dl_bler = parseFloat(NACK_TB0) / (parseFloat(ACK_TB0) + parseFloat(NACK_TB0));
                    dl_bler = isNaN(dl_bler) ? "NaN" : dl_bler.toFixed(4);
                    dl_bler = dl_bler.toString().padEnd(8);
                } catch (error) {
                    var dl_bler = "NaN".padEnd(8);
                }
                dlMcs = values[13].padEnd(8);
                ulCrcSucc = values[18].padEnd(8);
                ulCrcFail = values[19].padEnd(8);
                // calculate ul bler
                try {
                    var ul_bler = parseFloat(ulCrcFail) / (parseFloat(ulCrcSucc) + parseFloat(ulCrcFail));
                    ul_bler = isNaN(ul_bler) ? "NaN" : ul_bler.toFixed(4);
                    ul_bler = ul_bler.toString().padEnd(8);
                } catch (error) {
                    var ul_bler = "NaN".padEnd(8);
                }

                ulMcs = values[22].padEnd(8);
                output += "<span class='ue-id'>UE-ID=" + ueId + "</span>ACK-TB[0]=" + ACK_TB0 + "NACK-TB[0]=" + NACK_TB0 +
                    "<span class='dl-bler'>DL-BLER=" + dl_bler + "</span>DL-MCS=" +
                    dlMcs +
                    "UL-CRC-SUCC=" + ulCrcSucc + "UL-CRC-FAIL=" + ulCrcFail + "<span class='ul-bler'>UL-BLER=" +
                    ul_bler + "</span>UL-MCS=" + ulMcs +
                    "\n";
                index++;
            }

            return output;
        }

        function printToPDF() {
            window.print();
        }
    </script>
</head>

<body>
    <h2>Parse du_stats_XXX.txt for each UE Time DL/UL Tput, BLER and MCS</h2>
    <p style="margin: 0;">Author: Dustin_Chen, email: <a href="mailto:Dustin_Chen@compal.com"
            style="line-height: 1;">Dustin_Chen@compal.com</a> or <a href="mailto:chuhpsdustin@gmail.com"
            style="line-height: 1;">chuhpsdustin@gmail.com</a></p>
    <ul>
        <li><strong>Please paste the whole du_stats_XXX.txt content below, then it will parse the DL/UL Tput, BLER,
                MCS.</strong>
            <ul>
                <li>formula 1: <span style="color: blue;">DL-BLER</span> = NACK-TB[0] / (NACK-TB[0] + ACK-TB[0])</li>
                <li>formula 2: <span style="color: red;">UL-BLER</span> = UL-CRC-FAIL / (UL-CRC-SUCC + UL-CRC-FAIL)</li>
            </ul>
            <textarea id="inputTextArea" rows="10" cols="80"></textarea>
            <br>
            <button onclick="parseContent()">Parse Txt</button>
            <button onclick="printToPDF()">Print To PDF</button>
            <pre id="output"></pre>
        </li>
    </ul>


</body>

</html>